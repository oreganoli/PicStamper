name: Build

on: [push]

jobs:
  build_deploy_issuer:
    name: Build and deploy URL issuer lambda
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CODE_BUCKET: ${{ secrets.CODE_BUCKET }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Zip up files
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r PicStamperLambdas.zip PicStamperLambdas/bin/Release/net6.0
      - name: Send code to S3
        run: "aws s3 cp ./PicStamperLambdas.zip s3://$CODE_BUCKET/PicStamperLambdas.zip"
      - name: Update url issuer lambda code
        run: "aws lambda update-function-code --function-name PicStamperLinkIssuer --s3-bucket $CODE_BUCKET --s3-key PicStamperLambdas.zip"
      - name: Update url issuer lambda config
        run: "aws lambda update-function-configuration --function-name PicStamperLinkIssuer --handler PicStamperLambdas::UrlIssuer.Function::FunctionHandler"
  build_deploy_front:
    name: Build and deploy frontend
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      FRONTEND_BUCKET: ${{ secrets.FRONTEND_BUCKET }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Synchronize frontend files with S3
        run: "aws s3 sync ./frontend s3://$FRONTEND_BUCKET --delete"